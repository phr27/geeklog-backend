<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geeklog.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.geeklog.domain.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="bio" property="bio" jdbcType="VARCHAR" />
    <result column="is_admin" property="isAdmin" jdbcType="BIT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.geeklog.domain.User" useGeneratedKeys="true" keyProperty="userId">
    insert into user (username, password,
      nickname, avatar, bio, 
      is_admin)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{bio,jdbcType=VARCHAR}, 
      #{isAdmin,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.geeklog.domain.User" >
    update user
    <set>
      <if test="password != null and password != ''">
        password = #{password},
      </if>
      <if test="nickname != null">
        nickname = #{nickname},
      </if>
      <if test="avatar != null">
        avatar = #{avatar},
      </if>
      <if test="bio != null">
        bio = #{bio},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateAvatarNull" parameterType="int">
    update user set avatar = null where user_id = #{userId}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select user_id, username, password, nickname, avatar, bio, is_admin
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select user_id, username, password, nickname, avatar, bio, is_admin
    from user
  </select>
  <select id="queryNumOfUsers" resultType="int">
    SELECT count(1)
    FROM user
    <where>
      <if test="username != null">
        and username like concat('%', #{username}, '%')
      </if>
      <if test="nickname != null">
        and nickname like concat('%', #{nickname}, '%')
      </if>
      <if test="isAdmin != null">
        and is_admin = #{isAdmin}
      </if>
    </where>
  </select>
  <select id="queryPaging" resultMap="BaseResultMap">
    select user_id, username, password, nickname, avatar, bio, is_admin
    from user
    <where>
      <if test="user.username != null">
        and username like concat('%', #{user.username}, '%')
      </if>
      <if test="user.nickname != null">
        and nickname like concat('%', #{user.nickname}, '%')
      </if>
      <if test="user.isAdmin != null">
        and is_admin = #{user.isAdmin}
      </if>
    </where>
    LIMIT #{rowIndex}, #{pageSize}
  </select>
  <select id="login" resultMap="BaseResultMap">
    SELECT user_id, username, password, nickname, avatar, bio, is_admin
    FROM user
    WHERE username = #{username} and password = #{password}
  </select>
  <select id="queryUsername" resultMap="BaseResultMap">
    SELECT user_id, username, password, nickname, avatar, bio, is_admin
    FROM user
    WHERE username = #{username}
  </select>
</mapper>